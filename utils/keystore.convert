#!/usr/bin/bash

set -xe

# File used to convert Java keystore/truststore files into PEM format, used in librdkafka library (kcat, kafkacat)

# By https://stackoverflow.com/questions/72316450/how-to-use-truststore-jks-keystore-jks-files-to-build-a-producer-application-i

keytool -importkeystore -srckeystore truststore.jks -destkeystore truststore.p12 -deststoretype PKCS12
openssl pkcs12 -in truststore.p12 -nokeys -out truststore.cer.pem
keytool -importkeystore -srckeystore keystore.jks -destkeystore keystore.p12 -srcstoretype jks -deststoretype pkcs12
openssl pkcs12 -in keystore.p12 -out keystore.pem
openssl rsa -in keystore.pem -out newrsakeystore.pem

####
### For the [Python world next names may be much more convenient](https://kafka-python.readthedocs.io/en/master/apidoc/KafkaConsumer.html):
##
#```python
#context = ssl.SSLContext(ssl.PROTOCOL_TLS_CLIENT)
#context.load_cert_chain(
#    '/home/pasha/@Projects/@DATA/kafka.scripts/conf/DEV/certificate.pem',
#    '/home/pasha/@Projects/@DATA/kafka.scripts/conf/DEV/RSAkey.pem'
#)
#context.load_verify_locations('/home/pasha/@Projects/@DATA/kafka.scripts/conf/DEV/cafile.pem')
#
#producer = KafkaProducer(
#    bootstrap_servers='10.221.0.93:19090,10.221.0.93:19091,10.221.0.93:19092',
#    security_protocol='SSL',
#    ssl_check_hostname=True,
#    ssl_context=context,
#    value_serializer=lambda m: json.dumps(m).encode('utf-8')
#)
#json_row = {"test": "ok"}
#producer.send(TOPIC, json_row)
#producer.flush()
#```
ln -s truststore.cer.pem cafile.pem
ln -s keystore.pem certificate.pem
ln -s newrsakeystore.pem RSAkey.pem
